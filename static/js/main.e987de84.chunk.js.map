{"version":3,"sources":["components/Form.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","Todolist","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e987de84.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form =  ({setInputText,todos,setTodos,inputText, setStatus}) => {\r\n  //Here I can write javascript and code and function\r\n  const  inputTextHandler= (e) => {\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n    \r\n  };\r\n  const submitTodoHandler =(e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,{text:inputText, completed:false, id:Math.random()*1000},\r\n    ]);\r\n    setInputText(\"\")\r\n  };\r\n  const statusHandler = (e) => {\r\n   setStatus(e.target.value);\r\n  }\r\n    return(\r\n     <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler}className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Finish</option>\r\n          <option value=\"uncompleted\">unfinished</option>\r\n        </select>\r\n      </div>\r\n     </form>\r\n );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo= ({text, todo, todos, setTodos}) =>  {\r\n    //Events\r\nconst deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todos.id));\r\n};\r\nconst completeHandler = () => {\r\n    setTodos(\r\n        todos.map((item) => {\r\n        if(item.id === todo.id) {\r\n            return {\r\n             ...item, completed: !item.completed \r\n            };\r\n        }\r\n        return item;\r\n        \r\n    })\r\n    );\r\n};\r\nreturn (\r\n<div className=\"todor\n    <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n    <button onClick={completeHandler} className=\"complete-btn\">\r\n    <i className=\"fas fa-check\"></i>\r\n    </button>\r\n    <button onClick={deleteHandler} \r\n    className=\"trash-btn\"> \r\n    <i className=\"fas fa-trash\"> \r\n    </i></button> \r\n    \r\n    \r\n</div>\r\n);\r\n};\r\n\r\nexport default Todo;","import React from \"react\";\r\n// Import Components\r\n import Todo from \"./Todo\";\r\n\r\nconst Todolist = ({todos,setTodos,filteredTodos}) => {\r\n    return(  \r\n    <div className=\"todo-container\">\r\n    <ul className=\"todo-list\">\r\n       {filteredTodos.map((todo) => (\r\n            <Todo \r\n            todo={todo} \r\n            setTodos={setTodos} \r\n            todos={todos} \r\n            key={todo.id} \r\n            text={todo.text} \r\n            id={todo}\r\n            />\r\n        \r\n       ))}\r\n    </ul>\r\n  </div>);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Todolist;","import React, { useState,useEffect } from 'react';\nimport './App.css';\n// import componrnts for li\nimport Form from \"./components/Form\";\nimport Todolist from \"./components/Todolist\";\n\nfunction App() {\n  const[inputText, setInputText] = useState(\"\");\n  const[todos, setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const[filteredTodos, setFilteredTodos] =useState([]);\n  \n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n    useEffect(() => {\n      filterHandler();\n    }, [todos,status] );\n\n  const filterHandler = () => { \n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true ));\n        break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter((todo) => todo.completed === false ));\n          break;\n          default:\n            setFilteredTodos(todos);\n            break;\n    }\n  };\n  const saveLocalTodos = () =>{\n    \n      localStorage.setItem(\"todos\".JSON.stringify(todos));\n    \n  };\n  const getLocalTodos = () => {if(localStorage.getItem('todos') ===null){\n    localStorage.setItem(\"todos\",JSON.stringify([]));\n  } else {\n   let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n  setTodos(todoLocal)\n  }\n };\n  return (\n    <div className=\"App\">\n      \n      <header>\n        <h1> To do list stop being lazy </h1>\n      </header>\n      <Form \n      inputText={inputText}\n      todos={todos} \n      setTodos={setTodos} \n      setStatus={setStatus}\n      setInputText={setInputText}\n      //status is wrong\n      status={status}\n      \n      />\n      <Todolist filteredTodos={filteredTodos}  setTodos={setTodos} todos={todos}/>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}